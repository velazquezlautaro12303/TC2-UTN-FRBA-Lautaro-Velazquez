{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### TP SEMANAL 6\n",
    "\n",
    "### Consigna\n",
    "\n",
    "Se pide diseñar un filtro pasabanda que cumpla con la siguiente plantilla:\n",
    "\n",
    "- $w_0=2\\pi.22kHz$\n",
    "- $Q = 5$\n",
    "- Aproximación Chebyshev con ripple de 0,5 dB\n",
    "\n",
    "También se sabe que la transferencia del filtro debe ser:\n",
    "\n",
    "- |$T(f_{s1})$|=-16dB para $f_{s1}$=17kHz\n",
    "- |$T(f_{s2})$|=-24dB para $f_{s2}$=36kHz\n",
    "\n",
    "<img src=\"image45.png\">\n",
    "\n",
    "Consignas de la actividad:\n",
    "\n",
    "👉  Obtener la plantilla de diseño pasabanda normalizada\n",
    "\n",
    "👉  Obtener la función transferencia normalizada del prototipo pasabajo que satisfaga el requerimiento del filtro pasabanda.\n",
    "\n",
    "👉  Obtener la transferencia pasabanda normalizada\n",
    "\n",
    "👉  Implementar mediante secciones pasivas separadas por seguidores de tensión activos.\n",
    "\n",
    "👉  Activar las redes pasivas mediante la red propuesta aquí debajo y comprobar mediante simulación el comportamiento deseado.\n",
    "\n",
    "<img src=\"image46.png\">\n",
    "\n",
    "Informe\n",
    "\n",
    "Respecto al informe, se mantiene el mismo formato usado hasta el momento, informe en jupyter-notebook, simulaciones en python y LTspice. Se mantienen las recomendaciones para la inclusión de gráficas y resultados de la simulación, y se agrega:\n",
    "\n",
    "+ Cada figura deberá tener una leyenda o un párrafo que haga referencia a ella\n",
    "\n",
    "+ Al menos una sección donde:\n",
    "\n",
    "     * se discutan los resultados obtenidos, factibilidad de implementación de la red, componentes sensibles, etc.\n",
    "\n",
    "     * se informe las dificultades o problemas, si las hubiera\n",
    "\n",
    "     * se destaquen los aspectos salientes de la resolución propuesta.\n",
    "\n",
    "### Manuscrito\n",
    "\n",
    "<img src=\"image55.jpg\">"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "image/svg+xml": [
       "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>\n",
       "<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n",
       "  \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n",
       "<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"502.01644pt\" height=\"179.0178pt\" viewBox=\"0 0 502.01644 179.0178\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">\n",
       " <metadata>\n",
       "  <rdf:RDF xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:cc=\"http://creativecommons.org/ns#\" xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\n",
       "   <cc:Work>\n",
       "    <dc:type rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\"/>\n",
       "    <dc:date>2024-06-21T02:46:28.266981</dc:date>\n",
       "    <dc:format>image/svg+xml</dc:format>\n",
       "    <dc:creator>\n",
       "     <cc:Agent>\n",
       "      <dc:title>Matplotlib v3.8.3, https://matplotlib.org/</dc:title>\n",
       "     </cc:Agent>\n",
       "    </dc:creator>\n",
       "   </cc:Work>\n",
       "  </rdf:RDF>\n",
       " </metadata>\n",
       " <defs>\n",
       "  <style type=\"text/css\">*{stroke-linejoin: round; stroke-linecap: butt}</style>\n",
       " </defs>\n",
       " <g id=\"figure_1\">\n",
       "  <g id=\"patch_1\">\n",
       "   <path d=\"M 0 179.0178 \n",
       "L 502.01644 179.0178 \n",
       "L 502.01644 0 \n",
       "L 0 0 \n",
       "z\n",
       "\" style=\"fill: #ffffff\"/>\n",
       "  </g>\n",
       "  <g id=\"axes_1\">\n",
       "   <g id=\"patch_2\">\n",
       "    <path d=\"M 45.36432 120.5628 \n",
       "C 49.421927 120.5628 53.313892 118.950695 56.183054 116.081534 \n",
       "C 59.052215 113.212372 60.66432 109.320407 60.66432 105.2628 \n",
       "C 60.66432 101.205193 59.052215 97.313228 56.183054 94.444066 \n",
       "C 53.313892 91.574905 49.421927 89.9628 45.36432 89.9628 \n",
       "C 41.306713 89.9628 37.414748 91.574905 34.545586 94.444066 \n",
       "C 31.676425 97.313228 30.06432 101.205193 30.06432 105.2628 \n",
       "C 30.06432 109.320407 31.676425 113.212372 34.545586 116.081534 \n",
       "C 37.414748 118.950695 41.306713 120.5628 45.36432 120.5628 \n",
       "L 45.36432 120.5628 \n",
       "z\n",
       "\" clip-path=\"url(#p8af301b43c)\" style=\"fill: none; stroke: #000000; stroke-width: 2; stroke-linejoin: miter\"/>\n",
       "   </g>\n",
       "   <g id=\"patch_3\">\n",
       "    <path d=\"M 412.56432 112.9128 \n",
       "C 411.550256 112.9128 410.576688 113.316065 409.859637 114.033117 \n",
       "C 409.142585 114.750168 408.73932 115.723736 408.73932 116.7378 \n",
       "C 408.73932 117.751864 409.142585 118.725432 409.859637 119.442483 \n",
       "C 410.576688 120.159535 411.550256 120.5628 412.56432 120.5628 \n",
       "\" clip-path=\"url(#p8af301b43c)\" style=\"fill: none; stroke: #000000; stroke-width: 2; stroke-linejoin: miter\"/>\n",
       "   </g>\n",
       "   <g id=\"patch_4\">\n",
       "    <path d=\"M 412.56432 105.2628 \n",
       "C 411.550256 105.2628 410.576688 105.666065 409.859637 106.383117 \n",
       "C 409.142585 107.100168 408.73932 108.073736 408.73932 109.0878 \n",
       "C 408.73932 110.101864 409.142585 111.075432 409.859637 111.792483 \n",
       "C 410.576688 112.509535 411.550256 112.9128 412.56432 112.9128 \n",
       "\" clip-path=\"url(#p8af301b43c)\" style=\"fill: none; stroke: #000000; stroke-width: 2; stroke-linejoin: miter\"/>\n",
       "   </g>\n",
       "   <g id=\"patch_5\">\n",
       "    <path d=\"M 412.56432 97.6128 \n",
       "C 411.550256 97.6128 410.576688 98.016065 409.859637 98.733117 \n",
       "C 409.142585 99.450168 408.73932 100.423736 408.73932 101.4378 \n",
       "C 408.73932 102.451864 409.142585 103.425432 409.859637 104.142483 \n",
       "C 410.576688 104.859535 411.550256 105.2628 412.56432 105.2628 \n",
       "\" clip-path=\"url(#p8af301b43c)\" style=\"fill: none; stroke: #000000; stroke-width: 2; stroke-linejoin: miter\"/>\n",
       "   </g>\n",
       "   <g id=\"patch_6\">\n",
       "    <path d=\"M 412.56432 89.9628 \n",
       "C 411.550256 89.9628 410.576688 90.366065 409.859637 91.083117 \n",
       "C 409.142585 91.800168 408.73932 92.773736 408.73932 93.7878 \n",
       "C 408.73932 94.801864 409.142585 95.775432 409.859637 96.492483 \n",
       "C 410.576688 97.209535 411.550256 97.6128 412.56432 97.6128 \n",
       "\" clip-path=\"url(#p8af301b43c)\" style=\"fill: none; stroke: #000000; stroke-width: 2; stroke-linejoin: miter\"/>\n",
       "   </g>\n",
       "   <g id=\"line2d_1\">\n",
       "    <path d=\"M 45.36432 166.4628 \n",
       "L 45.36432 120.5628 \n",
       "L 45.36432 120.5628 \n",
       "M 45.36432 89.9628 \n",
       "L 45.36432 89.9628 \n",
       "L 45.36432 44.0628 \n",
       "\" clip-path=\"url(#p8af301b43c)\" style=\"fill: none; stroke: #000000; stroke-width: 2; stroke-linecap: round\"/>\n",
       "   </g>\n",
       "   <g id=\"line2d_2\">\n",
       "    <path d=\"M 48.42432 112.9128 \n",
       "L 42.30432 112.9128 \n",
       "\" clip-path=\"url(#p8af301b43c)\" style=\"fill: none; stroke: #000000; stroke-width: 2; stroke-linecap: round\"/>\n",
       "   </g>\n",
       "   <g id=\"line2d_3\">\n",
       "    <path d=\"M 45.36432 100.6728 \n",
       "L 45.36432 94.5528 \n",
       "\" clip-path=\"url(#p8af301b43c)\" style=\"fill: none; stroke: #000000; stroke-width: 2; stroke-linecap: round\"/>\n",
       "   </g>\n",
       "   <g id=\"line2d_4\">\n",
       "    <path d=\"M 48.42432 97.6128 \n",
       "L 42.30432 97.6128 \n",
       "\" clip-path=\"url(#p8af301b43c)\" style=\"fill: none; stroke: #000000; stroke-width: 2; stroke-linecap: round\"/>\n",
       "   </g>\n",
       "   <g id=\"line2d_5\">\n",
       "    <path d=\"M 45.36432 44.0628 \n",
       "L 75.96432 44.0628 \n",
       "L 106.56432 44.0628 \n",
       "\" clip-path=\"url(#p8af301b43c)\" style=\"fill: none; stroke: #000000; stroke-width: 2; stroke-linecap: round\"/>\n",
       "   </g>\n",
       "   <g id=\"line2d_6\">\n",
       "    <path d=\"M 106.56432 166.4628 \n",
       "L 75.96432 166.4628 \n",
       "L 45.36432 166.4628 \n",
       "\" clip-path=\"url(#p8af301b43c)\" style=\"fill: none; stroke: #000000; stroke-width: 2; stroke-linecap: round\"/>\n",
       "   </g>\n",
       "   <g id=\"line2d_7\">\n",
       "    <path d=\"M 106.56432 166.4628 \n",
       "L 137.16432 166.4628 \n",
       "L 167.76432 166.4628 \n",
       "\" clip-path=\"url(#p8af301b43c)\" style=\"fill: none; stroke: #000000; stroke-width: 2; stroke-linecap: round\"/>\n",
       "   </g>\n",
       "   <g id=\"line2d_8\">\n",
       "    <path d=\"M 167.76432 44.0628 \n",
       "L 152.46432 44.0628 \n",
       "L 137.16432 44.0628 \n",
       "\" clip-path=\"url(#p8af301b43c)\" style=\"fill: none; stroke: #000000; stroke-width: 2; stroke-linecap: round\"/>\n",
       "   </g>\n",
       "   <g id=\"line2d_9\">\n",
       "    <path d=\"M 129.51432 44.0628 \n",
       "L 121.86432 44.0628 \n",
       "L 106.56432 44.0628 \n",
       "\" clip-path=\"url(#p8af301b43c)\" style=\"fill: none; stroke: #000000; stroke-width: 2; stroke-linecap: round\"/>\n",
       "   </g>\n",
       "   <g id=\"patch_7\">\n",
       "    <path d=\"M 129.51432 41.7678 \n",
       "L 137.16432 44.0628 \n",
       "L 129.51432 46.3578 \n",
       "z\n",
       "\" clip-path=\"url(#p8af301b43c)\"/>\n",
       "   </g>\n",
       "   <g id=\"line2d_10\">\n",
       "    <path d=\"M 167.76432 44.0628 \n",
       "L 213.66432 44.0628 \n",
       "L 216.21432 36.4128 \n",
       "L 221.31432 51.7128 \n",
       "L 226.41432 36.4128 \n",
       "L 231.51432 51.7128 \n",
       "L 236.61432 36.4128 \n",
       "L 241.71432 51.7128 \n",
       "L 244.26432 44.0628 \n",
       "L 290.16432 44.0628 \n",
       "\" clip-path=\"url(#p8af301b43c)\" style=\"fill: none; stroke: #000000; stroke-width: 2; stroke-linecap: round\"/>\n",
       "   </g>\n",
       "   <g id=\"line2d_11\">\n",
       "    <path d=\"M 290.16432 166.4628 \n",
       "L 228.96432 166.4628 \n",
       "L 167.76432 166.4628 \n",
       "\" clip-path=\"url(#p8af301b43c)\" style=\"fill: none; stroke: #000000; stroke-width: 2; stroke-linecap: round\"/>\n",
       "   </g>\n",
       "   <g id=\"line2d_12\">\n",
       "    <path d=\"M 290.16432 166.4628 \n",
       "L 290.16432 120.5628 \n",
       "L 282.51432 118.0128 \n",
       "L 297.81432 112.9128 \n",
       "L 282.51432 107.8128 \n",
       "L 297.81432 102.7128 \n",
       "L 282.51432 97.6128 \n",
       "L 297.81432 92.5128 \n",
       "L 290.16432 89.9628 \n",
       "L 290.16432 44.0628 \n",
       "\" clip-path=\"url(#p8af301b43c)\" style=\"fill: none; stroke: #000000; stroke-width: 2; stroke-linecap: round\"/>\n",
       "   </g>\n",
       "   <g id=\"line2d_13\">\n",
       "    <path d=\"M 290.16432 44.0628 \n",
       "L 320.76432 44.0628 \n",
       "L 351.36432 44.0628 \n",
       "\" clip-path=\"url(#p8af301b43c)\" style=\"fill: none; stroke: #000000; stroke-width: 2; stroke-linecap: round\"/>\n",
       "   </g>\n",
       "   <g id=\"line2d_14\">\n",
       "    <path d=\"M 351.36432 166.4628 \n",
       "L 320.76432 166.4628 \n",
       "L 290.16432 166.4628 \n",
       "\" clip-path=\"url(#p8af301b43c)\" style=\"fill: none; stroke: #000000; stroke-width: 2; stroke-linecap: round\"/>\n",
       "   </g>\n",
       "   <g id=\"line2d_15\">\n",
       "    <path d=\"M 351.36432 166.4628 \n",
       "L 351.36432 108.0168 \n",
       "M 343.71432 108.0168 \n",
       "L 359.01432 108.0168 \n",
       "M 343.71432 102.5088 \n",
       "L 359.01432 102.5088 \n",
       "M 351.36432 102.5088 \n",
       "L 351.36432 44.0628 \n",
       "\" clip-path=\"url(#p8af301b43c)\" style=\"fill: none; stroke: #000000; stroke-width: 2; stroke-linecap: round\"/>\n",
       "   </g>\n",
       "   <g id=\"line2d_16\">\n",
       "    <path d=\"M 351.36432 44.0628 \n",
       "L 381.96432 44.0628 \n",
       "L 412.56432 44.0628 \n",
       "\" clip-path=\"url(#p8af301b43c)\" style=\"fill: none; stroke: #000000; stroke-width: 2; stroke-linecap: round\"/>\n",
       "   </g>\n",
       "   <g id=\"line2d_17\">\n",
       "    <path d=\"M 412.56432 166.4628 \n",
       "L 381.96432 166.4628 \n",
       "L 351.36432 166.4628 \n",
       "\" clip-path=\"url(#p8af301b43c)\" style=\"fill: none; stroke: #000000; stroke-width: 2; stroke-linecap: round\"/>\n",
       "   </g>\n",
       "   <g id=\"line2d_18\">\n",
       "    <path d=\"M 412.56432 166.4628 \n",
       "L 412.56432 120.5628 \n",
       "M 412.56432 89.9628 \n",
       "L 412.56432 44.0628 \n",
       "\" clip-path=\"url(#p8af301b43c)\" style=\"fill: none; stroke: #000000; stroke-width: 2; stroke-linecap: round\"/>\n",
       "   </g>\n",
       "   <g id=\"line2d_19\">\n",
       "    <path d=\"M 412.56432 44.0628 \n",
       "L 443.16432 44.0628 \n",
       "L 473.76432 44.0628 \n",
       "\" clip-path=\"url(#p8af301b43c)\" style=\"fill: none; stroke: #000000; stroke-width: 2; stroke-linecap: round\"/>\n",
       "   </g>\n",
       "   <g id=\"line2d_20\">\n",
       "    <path d=\"M 473.76432 166.4628 \n",
       "L 443.16432 166.4628 \n",
       "L 412.56432 166.4628 \n",
       "\" clip-path=\"url(#p8af301b43c)\" style=\"fill: none; stroke: #000000; stroke-width: 2; stroke-linecap: round\"/>\n",
       "   </g>\n",
       "   <g id=\"text_1\">\n",
       "    <g clip-path=\"url(#p8af301b43c)\">\n",
       "     <!-- $V_i$ -->\n",
       "     <g transform=\"translate(13.80932 109.263894) scale(0.145 -0.145)\">\n",
       "      <defs>\n",
       "       <path id=\"DejaVuSans-Oblique-56\" d=\"M 1319 0 \n",
       "L 500 4666 \n",
       "L 1119 4666 \n",
       "L 1797 653 \n",
       "L 4063 4666 \n",
       "L 4750 4666 \n",
       "L 2053 0 \n",
       "L 1319 0 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-Oblique-69\" d=\"M 1172 4863 \n",
       "L 1747 4863 \n",
       "L 1606 4134 \n",
       "L 1031 4134 \n",
       "L 1172 4863 \n",
       "z\n",
       "M 909 3500 \n",
       "L 1484 3500 \n",
       "L 800 0 \n",
       "L 225 0 \n",
       "L 909 3500 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "      </defs>\n",
       "      <use xlink:href=\"#DejaVuSans-Oblique-56\" transform=\"translate(0 0.09375)\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-Oblique-69\" transform=\"translate(68.408203 -16.3125) scale(0.7)\"/>\n",
       "     </g>\n",
       "    </g>\n",
       "   </g>\n",
       "   <g id=\"text_2\">\n",
       "    <g clip-path=\"url(#p8af301b43c)\">\n",
       "     <!-- + -->\n",
       "     <g transform=\"translate(100.489047 78.663894) scale(0.145 -0.145)\">\n",
       "      <defs>\n",
       "       <path id=\"DejaVuSans-2b\" d=\"M 2944 4013 \n",
       "L 2944 2272 \n",
       "L 4684 2272 \n",
       "L 4684 1741 \n",
       "L 2944 1741 \n",
       "L 2944 0 \n",
       "L 2419 0 \n",
       "L 2419 1741 \n",
       "L 678 1741 \n",
       "L 678 2272 \n",
       "L 2419 2272 \n",
       "L 2419 4013 \n",
       "L 2944 4013 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "      </defs>\n",
       "      <use xlink:href=\"#DejaVuSans-2b\"/>\n",
       "     </g>\n",
       "    </g>\n",
       "   </g>\n",
       "   <g id=\"text_3\">\n",
       "    <g clip-path=\"url(#p8af301b43c)\">\n",
       "     <!-- $V_i$ -->\n",
       "     <g transform=\"translate(99.96682 109.263894) scale(0.145 -0.145)\">\n",
       "      <use xlink:href=\"#DejaVuSans-Oblique-56\" transform=\"translate(0 0.09375)\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-Oblique-69\" transform=\"translate(68.408203 -16.3125) scale(0.7)\"/>\n",
       "     </g>\n",
       "    </g>\n",
       "   </g>\n",
       "   <g id=\"text_4\">\n",
       "    <g clip-path=\"url(#p8af301b43c)\">\n",
       "     <!-- - -->\n",
       "     <g transform=\"translate(103.948656 139.863894) scale(0.145 -0.145)\">\n",
       "      <defs>\n",
       "       <path id=\"DejaVuSans-2d\" d=\"M 313 2009 \n",
       "L 1997 2009 \n",
       "L 1997 1497 \n",
       "L 313 1497 \n",
       "L 313 2009 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "      </defs>\n",
       "      <use xlink:href=\"#DejaVuSans-2d\"/>\n",
       "     </g>\n",
       "    </g>\n",
       "   </g>\n",
       "   <g id=\"text_5\">\n",
       "    <g clip-path=\"url(#p8af301b43c)\">\n",
       "     <!-- $I_i$ -->\n",
       "     <g transform=\"translate(118.09432 37.987253) scale(0.145 -0.145)\">\n",
       "      <defs>\n",
       "       <path id=\"DejaVuSans-Oblique-49\" d=\"M 1081 4666 \n",
       "L 1716 4666 \n",
       "L 806 0 \n",
       "L 172 0 \n",
       "L 1081 4666 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "      </defs>\n",
       "      <use xlink:href=\"#DejaVuSans-Oblique-49\" transform=\"translate(0 0.09375)\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-Oblique-69\" transform=\"translate(29.492188 -16.3125) scale(0.7)\"/>\n",
       "     </g>\n",
       "    </g>\n",
       "   </g>\n",
       "   <g id=\"text_6\">\n",
       "    <g clip-path=\"url(#p8af301b43c)\">\n",
       "     <!-- $R/a$ -->\n",
       "     <g transform=\"translate(217.00182 30.337253) scale(0.145 -0.145)\">\n",
       "      <defs>\n",
       "       <path id=\"DejaVuSans-Oblique-52\" d=\"M 1613 4147 \n",
       "L 1294 2491 \n",
       "L 2106 2491 \n",
       "Q 2584 2491 2879 2755 \n",
       "Q 3175 3019 3175 3444 \n",
       "Q 3175 3784 2976 3965 \n",
       "Q 2778 4147 2406 4147 \n",
       "L 1613 4147 \n",
       "z\n",
       "M 2772 2241 \n",
       "Q 2972 2194 3105 2009 \n",
       "Q 3238 1825 3413 1275 \n",
       "L 3809 0 \n",
       "L 3144 0 \n",
       "L 2778 1197 \n",
       "Q 2638 1659 2453 1815 \n",
       "Q 2269 1972 1888 1972 \n",
       "L 1191 1972 \n",
       "L 806 0 \n",
       "L 172 0 \n",
       "L 1081 4666 \n",
       "L 2503 4666 \n",
       "Q 3150 4666 3495 4373 \n",
       "Q 3841 4081 3841 3531 \n",
       "Q 3841 3044 3547 2687 \n",
       "Q 3253 2331 2772 2241 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-2f\" d=\"M 1625 4666 \n",
       "L 2156 4666 \n",
       "L 531 -594 \n",
       "L 0 -594 \n",
       "L 1625 4666 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-Oblique-61\" d=\"M 3438 1997 \n",
       "L 3047 0 \n",
       "L 2472 0 \n",
       "L 2578 531 \n",
       "Q 2325 219 2001 64 \n",
       "Q 1678 -91 1281 -91 \n",
       "Q 834 -91 548 182 \n",
       "Q 263 456 263 884 \n",
       "Q 263 1497 752 1853 \n",
       "Q 1241 2209 2100 2209 \n",
       "L 2900 2209 \n",
       "L 2931 2363 \n",
       "Q 2938 2388 2941 2417 \n",
       "Q 2944 2447 2944 2509 \n",
       "Q 2944 2788 2717 2942 \n",
       "Q 2491 3097 2081 3097 \n",
       "Q 1800 3097 1504 3025 \n",
       "Q 1209 2953 897 2809 \n",
       "L 997 3341 \n",
       "Q 1322 3463 1633 3523 \n",
       "Q 1944 3584 2234 3584 \n",
       "Q 2853 3584 3176 3315 \n",
       "Q 3500 3047 3500 2534 \n",
       "Q 3500 2431 3484 2292 \n",
       "Q 3469 2153 3438 1997 \n",
       "z\n",
       "M 2816 1759 \n",
       "L 2241 1759 \n",
       "Q 1534 1759 1195 1570 \n",
       "Q 856 1381 856 984 \n",
       "Q 856 709 1029 553 \n",
       "Q 1203 397 1509 397 \n",
       "Q 1978 397 2328 733 \n",
       "Q 2678 1069 2791 1631 \n",
       "L 2816 1759 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "      </defs>\n",
       "      <use xlink:href=\"#DejaVuSans-Oblique-52\" transform=\"translate(0 0.09375)\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-2f\" transform=\"translate(69.482422 0.09375)\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-Oblique-61\" transform=\"translate(103.173828 0.09375)\"/>\n",
       "     </g>\n",
       "    </g>\n",
       "   </g>\n",
       "   <g id=\"text_7\">\n",
       "    <g clip-path=\"url(#p8af301b43c)\">\n",
       "     <!-- $R/(1-a)$ -->\n",
       "     <g transform=\"translate(217.24932 109.263894) scale(0.145 -0.145)\">\n",
       "      <defs>\n",
       "       <path id=\"DejaVuSans-28\" d=\"M 1984 4856 \n",
       "Q 1566 4138 1362 3434 \n",
       "Q 1159 2731 1159 2009 \n",
       "Q 1159 1288 1364 580 \n",
       "Q 1569 -128 1984 -844 \n",
       "L 1484 -844 \n",
       "Q 1016 -109 783 600 \n",
       "Q 550 1309 550 2009 \n",
       "Q 550 2706 781 3412 \n",
       "Q 1013 4119 1484 4856 \n",
       "L 1984 4856 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-31\" d=\"M 794 531 \n",
       "L 1825 531 \n",
       "L 1825 4091 \n",
       "L 703 3866 \n",
       "L 703 4441 \n",
       "L 1819 4666 \n",
       "L 2450 4666 \n",
       "L 2450 531 \n",
       "L 3481 531 \n",
       "L 3481 0 \n",
       "L 794 0 \n",
       "L 794 531 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-2212\" d=\"M 678 2272 \n",
       "L 4684 2272 \n",
       "L 4684 1741 \n",
       "L 678 1741 \n",
       "L 678 2272 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-29\" d=\"M 513 4856 \n",
       "L 1013 4856 \n",
       "Q 1481 4119 1714 3412 \n",
       "Q 1947 2706 1947 2009 \n",
       "Q 1947 1309 1714 600 \n",
       "Q 1481 -109 1013 -844 \n",
       "L 513 -844 \n",
       "Q 928 -128 1133 580 \n",
       "Q 1338 1288 1338 2009 \n",
       "Q 1338 2731 1133 3434 \n",
       "Q 928 4138 513 4856 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "      </defs>\n",
       "      <use xlink:href=\"#DejaVuSans-Oblique-52\" transform=\"translate(0 0.125)\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-2f\" transform=\"translate(69.482422 0.125)\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-28\" transform=\"translate(103.173828 0.125)\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-31\" transform=\"translate(142.1875 0.125)\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-2212\" transform=\"translate(225.292969 0.125)\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-Oblique-61\" transform=\"translate(328.564453 0.125)\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-29\" transform=\"translate(389.84375 0.125)\"/>\n",
       "     </g>\n",
       "    </g>\n",
       "   </g>\n",
       "   <g id=\"text_8\">\n",
       "    <g clip-path=\"url(#p8af301b43c)\">\n",
       "     <!-- $C1$ -->\n",
       "     <g transform=\"translate(321.22432 109.263894) scale(0.145 -0.145)\">\n",
       "      <defs>\n",
       "       <path id=\"DejaVuSans-Oblique-43\" d=\"M 4447 4306 \n",
       "L 4319 3641 \n",
       "Q 4019 3944 3683 4091 \n",
       "Q 3347 4238 2956 4238 \n",
       "Q 2422 4238 2017 3981 \n",
       "Q 1613 3725 1319 3200 \n",
       "Q 1131 2863 1032 2486 \n",
       "Q 934 2109 934 1728 \n",
       "Q 934 1091 1264 756 \n",
       "Q 1594 422 2222 422 \n",
       "Q 2656 422 3056 561 \n",
       "Q 3456 700 3834 978 \n",
       "L 3688 231 \n",
       "Q 3316 72 2936 -9 \n",
       "Q 2556 -91 2175 -91 \n",
       "Q 1278 -91 773 396 \n",
       "Q 269 884 269 1753 \n",
       "Q 269 2309 461 2846 \n",
       "Q 653 3384 1013 3828 \n",
       "Q 1394 4300 1883 4525 \n",
       "Q 2372 4750 3022 4750 \n",
       "Q 3422 4750 3780 4639 \n",
       "Q 4138 4528 4447 4306 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "      </defs>\n",
       "      <use xlink:href=\"#DejaVuSans-Oblique-43\" transform=\"translate(0 0.78125)\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-31\" transform=\"translate(69.824219 0.78125)\"/>\n",
       "     </g>\n",
       "    </g>\n",
       "   </g>\n",
       "   <g id=\"text_9\">\n",
       "    <g clip-path=\"url(#p8af301b43c)\">\n",
       "     <!-- $Leq$ -->\n",
       "     <g transform=\"translate(379.434339 109.234441) scale(0.145 -0.145)\">\n",
       "      <defs>\n",
       "       <path id=\"DejaVuSans-Oblique-4c\" d=\"M 1075 4666 \n",
       "L 1709 4666 \n",
       "L 909 525 \n",
       "L 3181 525 \n",
       "L 3078 0 \n",
       "L 172 0 \n",
       "L 1075 4666 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-Oblique-65\" d=\"M 3078 2063 \n",
       "Q 3088 2113 3092 2166 \n",
       "Q 3097 2219 3097 2272 \n",
       "Q 3097 2653 2873 2875 \n",
       "Q 2650 3097 2266 3097 \n",
       "Q 1838 3097 1509 2826 \n",
       "Q 1181 2556 1013 2059 \n",
       "L 3078 2063 \n",
       "z\n",
       "M 3578 1613 \n",
       "L 903 1613 \n",
       "Q 884 1494 878 1425 \n",
       "Q 872 1356 872 1306 \n",
       "Q 872 872 1139 634 \n",
       "Q 1406 397 1894 397 \n",
       "Q 2269 397 2603 481 \n",
       "Q 2938 566 3225 728 \n",
       "L 3116 159 \n",
       "Q 2806 34 2476 -28 \n",
       "Q 2147 -91 1806 -91 \n",
       "Q 1078 -91 686 257 \n",
       "Q 294 606 294 1247 \n",
       "Q 294 1794 489 2264 \n",
       "Q 684 2734 1063 3103 \n",
       "Q 1306 3334 1642 3459 \n",
       "Q 1978 3584 2356 3584 \n",
       "Q 2950 3584 3301 3228 \n",
       "Q 3653 2872 3653 2272 \n",
       "Q 3653 2128 3634 1964 \n",
       "Q 3616 1800 3578 1613 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "       <path id=\"DejaVuSans-Oblique-71\" d=\"M 2669 525 \n",
       "Q 2438 222 2123 65 \n",
       "Q 1809 -91 1428 -91 \n",
       "Q 897 -91 595 267 \n",
       "Q 294 625 294 1253 \n",
       "Q 294 1759 480 2231 \n",
       "Q 666 2703 1013 3078 \n",
       "Q 1238 3322 1530 3453 \n",
       "Q 1822 3584 2144 3584 \n",
       "Q 2531 3584 2781 3431 \n",
       "Q 3031 3278 3144 2969 \n",
       "L 3244 3494 \n",
       "L 3822 3494 \n",
       "L 2888 -1319 \n",
       "L 2309 -1319 \n",
       "L 2669 525 \n",
       "z\n",
       "M 891 1338 \n",
       "Q 891 875 1084 633 \n",
       "Q 1278 391 1644 391 \n",
       "Q 2188 391 2572 911 \n",
       "Q 2956 1431 2956 2175 \n",
       "Q 2956 2625 2757 2864 \n",
       "Q 2559 3103 2188 3103 \n",
       "Q 1916 3103 1684 2976 \n",
       "Q 1453 2850 1281 2606 \n",
       "Q 1100 2350 995 2006 \n",
       "Q 891 1663 891 1338 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "      </defs>\n",
       "      <use xlink:href=\"#DejaVuSans-Oblique-4c\" transform=\"translate(0 0.09375)\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-Oblique-65\" transform=\"translate(55.712891 0.09375)\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-Oblique-71\" transform=\"translate(117.236328 0.09375)\"/>\n",
       "     </g>\n",
       "    </g>\n",
       "   </g>\n",
       "   <g id=\"text_10\">\n",
       "    <g clip-path=\"url(#p8af301b43c)\">\n",
       "     <!-- + -->\n",
       "     <g transform=\"translate(467.689047 78.663894) scale(0.145 -0.145)\">\n",
       "      <use xlink:href=\"#DejaVuSans-2b\"/>\n",
       "     </g>\n",
       "    </g>\n",
       "   </g>\n",
       "   <g id=\"text_11\">\n",
       "    <g clip-path=\"url(#p8af301b43c)\">\n",
       "     <!-- $V_o$ -->\n",
       "     <g transform=\"translate(465.49932 109.263894) scale(0.145 -0.145)\">\n",
       "      <defs>\n",
       "       <path id=\"DejaVuSans-Oblique-6f\" d=\"M 1625 -91 \n",
       "Q 1009 -91 651 289 \n",
       "Q 294 669 294 1325 \n",
       "Q 294 1706 417 2101 \n",
       "Q 541 2497 738 2766 \n",
       "Q 1047 3184 1428 3384 \n",
       "Q 1809 3584 2291 3584 \n",
       "Q 2888 3584 3255 3212 \n",
       "Q 3622 2841 3622 2241 \n",
       "Q 3622 1825 3500 1412 \n",
       "Q 3378 1000 3181 728 \n",
       "Q 2875 309 2494 109 \n",
       "Q 2113 -91 1625 -91 \n",
       "z\n",
       "M 891 1344 \n",
       "Q 891 869 1089 633 \n",
       "Q 1288 397 1691 397 \n",
       "Q 2269 397 2648 901 \n",
       "Q 3028 1406 3028 2181 \n",
       "Q 3028 2634 2825 2865 \n",
       "Q 2622 3097 2228 3097 \n",
       "Q 1903 3097 1650 2945 \n",
       "Q 1397 2794 1197 2484 \n",
       "Q 1050 2253 970 1956 \n",
       "Q 891 1659 891 1344 \n",
       "z\n",
       "\" transform=\"scale(0.015625)\"/>\n",
       "      </defs>\n",
       "      <use xlink:href=\"#DejaVuSans-Oblique-56\" transform=\"translate(0 0.09375)\"/>\n",
       "      <use xlink:href=\"#DejaVuSans-Oblique-6f\" transform=\"translate(68.408203 -16.3125) scale(0.7)\"/>\n",
       "     </g>\n",
       "    </g>\n",
       "   </g>\n",
       "   <g id=\"text_12\">\n",
       "    <g clip-path=\"url(#p8af301b43c)\">\n",
       "     <!-- - -->\n",
       "     <g transform=\"translate(471.148656 139.863894) scale(0.145 -0.145)\">\n",
       "      <use xlink:href=\"#DejaVuSans-2d\"/>\n",
       "     </g>\n",
       "    </g>\n",
       "   </g>\n",
       "   <g id=\"patch_8\">\n",
       "    <path d=\"M 106.56432 46.3578 \n",
       "C 107.172961 46.3578 107.756756 46.115984 108.18713 45.68561 \n",
       "C 108.617504 45.255236 108.85932 44.671441 108.85932 44.0628 \n",
       "C 108.85932 43.454159 108.617504 42.870364 108.18713 42.43999 \n",
       "C 107.756756 42.009616 107.172961 41.7678 106.56432 41.7678 \n",
       "C 105.955679 41.7678 105.371884 42.009616 104.94151 42.43999 \n",
       "C 104.511136 42.870364 104.26932 43.454159 104.26932 44.0628 \n",
       "C 104.26932 44.671441 104.511136 45.255236 104.94151 45.68561 \n",
       "C 105.371884 46.115984 105.955679 46.3578 106.56432 46.3578 \n",
       "z\n",
       "\" clip-path=\"url(#p8af301b43c)\" style=\"fill: #ffffff; stroke: #000000; stroke-width: 2; stroke-linejoin: miter\"/>\n",
       "   </g>\n",
       "   <g id=\"patch_9\">\n",
       "    <path d=\"M 106.56432 168.7578 \n",
       "C 107.172961 168.7578 107.756756 168.515984 108.18713 168.08561 \n",
       "C 108.617504 167.655236 108.85932 167.071441 108.85932 166.4628 \n",
       "C 108.85932 165.854159 108.617504 165.270364 108.18713 164.83999 \n",
       "C 107.756756 164.409616 107.172961 164.1678 106.56432 164.1678 \n",
       "C 105.955679 164.1678 105.371884 164.409616 104.94151 164.83999 \n",
       "C 104.511136 165.270364 104.26932 165.854159 104.26932 166.4628 \n",
       "C 104.26932 167.071441 104.511136 167.655236 104.94151 168.08561 \n",
       "C 105.371884 168.515984 105.955679 168.7578 106.56432 168.7578 \n",
       "z\n",
       "\" clip-path=\"url(#p8af301b43c)\" style=\"fill: #ffffff; stroke: #000000; stroke-width: 2; stroke-linejoin: miter\"/>\n",
       "   </g>\n",
       "   <g id=\"patch_10\">\n",
       "    <path d=\"M 290.16432 168.7578 \n",
       "C 290.772961 168.7578 291.356756 168.515984 291.78713 168.08561 \n",
       "C 292.217504 167.655236 292.45932 167.071441 292.45932 166.4628 \n",
       "C 292.45932 165.854159 292.217504 165.270364 291.78713 164.83999 \n",
       "C 291.356756 164.409616 290.772961 164.1678 290.16432 164.1678 \n",
       "C 289.555679 164.1678 288.971884 164.409616 288.54151 164.83999 \n",
       "C 288.111136 165.270364 287.86932 165.854159 287.86932 166.4628 \n",
       "C 287.86932 167.071441 288.111136 167.655236 288.54151 168.08561 \n",
       "C 288.971884 168.515984 289.555679 168.7578 290.16432 168.7578 \n",
       "z\n",
       "\" clip-path=\"url(#p8af301b43c)\" style=\"stroke: #000000; stroke-width: 2; stroke-linejoin: miter\"/>\n",
       "   </g>\n",
       "   <g id=\"patch_11\">\n",
       "    <path d=\"M 290.16432 46.3578 \n",
       "C 290.772961 46.3578 291.356756 46.115984 291.78713 45.68561 \n",
       "C 292.217504 45.255236 292.45932 44.671441 292.45932 44.0628 \n",
       "C 292.45932 43.454159 292.217504 42.870364 291.78713 42.43999 \n",
       "C 291.356756 42.009616 290.772961 41.7678 290.16432 41.7678 \n",
       "C 289.555679 41.7678 288.971884 42.009616 288.54151 42.43999 \n",
       "C 288.111136 42.870364 287.86932 43.454159 287.86932 44.0628 \n",
       "C 287.86932 44.671441 288.111136 45.255236 288.54151 45.68561 \n",
       "C 288.971884 46.115984 289.555679 46.3578 290.16432 46.3578 \n",
       "z\n",
       "\" clip-path=\"url(#p8af301b43c)\" style=\"stroke: #000000; stroke-width: 2; stroke-linejoin: miter\"/>\n",
       "   </g>\n",
       "   <g id=\"patch_12\">\n",
       "    <path d=\"M 351.36432 168.7578 \n",
       "C 351.972961 168.7578 352.556756 168.515984 352.98713 168.08561 \n",
       "C 353.417504 167.655236 353.65932 167.071441 353.65932 166.4628 \n",
       "C 353.65932 165.854159 353.417504 165.270364 352.98713 164.83999 \n",
       "C 352.556756 164.409616 351.972961 164.1678 351.36432 164.1678 \n",
       "C 350.755679 164.1678 350.171884 164.409616 349.74151 164.83999 \n",
       "C 349.311136 165.270364 349.06932 165.854159 349.06932 166.4628 \n",
       "C 349.06932 167.071441 349.311136 167.655236 349.74151 168.08561 \n",
       "C 350.171884 168.515984 350.755679 168.7578 351.36432 168.7578 \n",
       "z\n",
       "\" clip-path=\"url(#p8af301b43c)\" style=\"stroke: #000000; stroke-width: 2; stroke-linejoin: miter\"/>\n",
       "   </g>\n",
       "   <g id=\"patch_13\">\n",
       "    <path d=\"M 351.36432 46.3578 \n",
       "C 351.972961 46.3578 352.556756 46.115984 352.98713 45.68561 \n",
       "C 353.417504 45.255236 353.65932 44.671441 353.65932 44.0628 \n",
       "C 353.65932 43.454159 353.417504 42.870364 352.98713 42.43999 \n",
       "C 352.556756 42.009616 351.972961 41.7678 351.36432 41.7678 \n",
       "C 350.755679 41.7678 350.171884 42.009616 349.74151 42.43999 \n",
       "C 349.311136 42.870364 349.06932 43.454159 349.06932 44.0628 \n",
       "C 349.06932 44.671441 349.311136 45.255236 349.74151 45.68561 \n",
       "C 350.171884 46.115984 350.755679 46.3578 351.36432 46.3578 \n",
       "z\n",
       "\" clip-path=\"url(#p8af301b43c)\" style=\"stroke: #000000; stroke-width: 2; stroke-linejoin: miter\"/>\n",
       "   </g>\n",
       "   <g id=\"patch_14\">\n",
       "    <path d=\"M 412.56432 168.7578 \n",
       "C 413.172961 168.7578 413.756756 168.515984 414.18713 168.08561 \n",
       "C 414.617504 167.655236 414.85932 167.071441 414.85932 166.4628 \n",
       "C 414.85932 165.854159 414.617504 165.270364 414.18713 164.83999 \n",
       "C 413.756756 164.409616 413.172961 164.1678 412.56432 164.1678 \n",
       "C 411.955679 164.1678 411.371884 164.409616 410.94151 164.83999 \n",
       "C 410.511136 165.270364 410.26932 165.854159 410.26932 166.4628 \n",
       "C 410.26932 167.071441 410.511136 167.655236 410.94151 168.08561 \n",
       "C 411.371884 168.515984 411.955679 168.7578 412.56432 168.7578 \n",
       "z\n",
       "\" clip-path=\"url(#p8af301b43c)\" style=\"stroke: #000000; stroke-width: 2; stroke-linejoin: miter\"/>\n",
       "   </g>\n",
       "   <g id=\"patch_15\">\n",
       "    <path d=\"M 412.56432 46.3578 \n",
       "C 413.172961 46.3578 413.756756 46.115984 414.18713 45.68561 \n",
       "C 414.617504 45.255236 414.85932 44.671441 414.85932 44.0628 \n",
       "C 414.85932 43.454159 414.617504 42.870364 414.18713 42.43999 \n",
       "C 413.756756 42.009616 413.172961 41.7678 412.56432 41.7678 \n",
       "C 411.955679 41.7678 411.371884 42.009616 410.94151 42.43999 \n",
       "C 410.511136 42.870364 410.26932 43.454159 410.26932 44.0628 \n",
       "C 410.26932 44.671441 410.511136 45.255236 410.94151 45.68561 \n",
       "C 411.371884 46.115984 411.955679 46.3578 412.56432 46.3578 \n",
       "z\n",
       "\" clip-path=\"url(#p8af301b43c)\" style=\"stroke: #000000; stroke-width: 2; stroke-linejoin: miter\"/>\n",
       "   </g>\n",
       "   <g id=\"patch_16\">\n",
       "    <path d=\"M 473.76432 46.3578 \n",
       "C 474.372961 46.3578 474.956756 46.115984 475.38713 45.68561 \n",
       "C 475.817504 45.255236 476.05932 44.671441 476.05932 44.0628 \n",
       "C 476.05932 43.454159 475.817504 42.870364 475.38713 42.43999 \n",
       "C 474.956756 42.009616 474.372961 41.7678 473.76432 41.7678 \n",
       "C 473.155679 41.7678 472.571884 42.009616 472.14151 42.43999 \n",
       "C 471.711136 42.870364 471.46932 43.454159 471.46932 44.0628 \n",
       "C 471.46932 44.671441 471.711136 45.255236 472.14151 45.68561 \n",
       "C 472.571884 46.115984 473.155679 46.3578 473.76432 46.3578 \n",
       "z\n",
       "\" clip-path=\"url(#p8af301b43c)\" style=\"fill: #ffffff; stroke: #000000; stroke-width: 2; stroke-linejoin: miter\"/>\n",
       "   </g>\n",
       "   <g id=\"patch_17\">\n",
       "    <path d=\"M 473.76432 168.7578 \n",
       "C 474.372961 168.7578 474.956756 168.515984 475.38713 168.08561 \n",
       "C 475.817504 167.655236 476.05932 167.071441 476.05932 166.4628 \n",
       "C 476.05932 165.854159 475.817504 165.270364 475.38713 164.83999 \n",
       "C 474.956756 164.409616 474.372961 164.1678 473.76432 164.1678 \n",
       "C 473.155679 164.1678 472.571884 164.409616 472.14151 164.83999 \n",
       "C 471.711136 165.270364 471.46932 165.854159 471.46932 166.4628 \n",
       "C 471.46932 167.071441 471.711136 167.655236 472.14151 168.08561 \n",
       "C 472.571884 168.515984 473.155679 168.7578 473.76432 168.7578 \n",
       "z\n",
       "\" clip-path=\"url(#p8af301b43c)\" style=\"fill: #ffffff; stroke: #000000; stroke-width: 2; stroke-linejoin: miter\"/>\n",
       "   </g>\n",
       "  </g>\n",
       " </g>\n",
       " <defs>\n",
       "  <clipPath id=\"p8af301b43c\">\n",
       "   <rect x=\"7.2\" y=\"7.2\" width=\"487.61644\" height=\"164.6178\"/>\n",
       "  </clipPath>\n",
       " </defs>\n",
       "</svg>\n"
      ],
      "text/plain": [
       "<schemdraw.schemdraw.Drawing at 0x796aac4377f0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from schemdraw import Drawing\n",
    "from pytc2.dibujar import dibujar_espacio_derivacion, dibujar_elemento_serie, dibujar_elemento_derivacion, dibujar_puerto_salida, dibujar_puerto_entrada\n",
    "from pytc2.general import to_latex\n",
    "\n",
    "d = Drawing(unit=4)\n",
    "d = dibujar_elemento_derivacion(d, \"V\",  with_nodes=False, sym_label=\"V_i\")\n",
    "d = dibujar_espacio_derivacion(d)\n",
    "d = dibujar_puerto_entrada(d, voltage_lbl=('+', to_latex('V_i'), '-'), current_lbl=to_latex('I_i'))\n",
    "d = dibujar_elemento_serie(d, \"R\", sym_label='R/a')\n",
    "d = dibujar_elemento_derivacion(d, \"R\", sym_label=\"R/(1-a)\")\n",
    "d = dibujar_espacio_derivacion(d)\n",
    "d = dibujar_elemento_derivacion(d, \"C\", sym_label=\"C1\")\n",
    "d = dibujar_espacio_derivacion(d)\n",
    "d = dibujar_elemento_derivacion(d, \"L\", sym_label=\"Leq\")\n",
    "d = dibujar_puerto_salida(d, voltage_lbl=('+', to_latex('V_o'), '-'))\n",
    "display(d)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Impedancia vista del circuito. \n",
    "\n",
    "$$Z_{in} = \\frac{Y_2.Y_4}{Y_1.Y_3.Y_5} = S$$\n",
    "\n",
    "Transferencia:\n",
    "\n",
    "$$T(S) = \\frac{\\frac{GaS}{C}}{S^2+S\\frac{G}{C}+\\frac{1}{LC}}$$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'## Circuito Pasabajos'"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/latex": [
       "$\\displaystyle T(s) =  \\frac{0.6264 }{s + 0.6265 } . \\frac{1.143 }{s^2 + s \\frac{1.069}{1.706} + 1.069^2}$"
      ],
      "text/plain": [
       "<IPython.core.display.Math object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "'## Circuito Pasabandas'"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/latex": [
       "$\\displaystyle T_{bp}(s) =  \\frac{s\\,1.207\\,\\frac{  1}{7.982}}{s^2 + s \\frac{  1}{7.982} +   1^2} . \\frac{s\\,2.045\\,\\frac{0.9029}{16.04}}{s^2 + s \\frac{0.9029}{16.04} + 0.9029^2} . \\frac{s\\,4.768\\,\\frac{1.107}{16.04}}{s^2 + s \\frac{1.107}{16.04} + 1.107^2}$"
      ],
      "text/plain": [
       "<IPython.core.display.Math object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/latex": [
       "$\\displaystyle T_{bp}(s) = \\frac{s^3 \\,\\, 0.005728 }{s^6 + s^5 \\,\\, 0.2506 + s^4 \\,\\, 3.061 + s^3 \\,\\, 0.5069 + s^2 \\,\\, 3.061 + s \\,\\, 0.2506 +   1 }$"
      ],
      "text/plain": [
       "<IPython.core.display.Math object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import scipy.signal as sig\n",
    "from IPython.display import display, Math\n",
    "import numpy as np\n",
    "from pytc2.sistemas_lineales import tf2sos_analog, pretty_print_SOS, pretty_print_lti\n",
    "\n",
    "N = 3\n",
    "ALPHA_MAX = .5\n",
    "\n",
    "z,p,k = sig.cheb1ap(N, ALPHA_MAX)\n",
    "num, den = sig.zpk2tf(z,p,k)\n",
    "sos_cheb = tf2sos_analog(num, den)\n",
    "display(\"## Circuito Pasabajos\")\n",
    "display(Math(\"T(s) = \" + pretty_print_SOS(sos_cheb, mode='omegayq', displaystr=False)))\n",
    "\n",
    "#######################################################################################\n",
    "\n",
    "Q  = 5\n",
    "w0 = .6264\n",
    "\n",
    "a   = 1.069/1.706\n",
    "b   = 1.143\n",
    "\n",
    "num1 = np.array([0,0,0, w0/Q, 0])\n",
    "den1 = np.array([0,0,1, w0/Q, 1])\n",
    "\n",
    "num2 = np.array([0,0,b/Q**2,0,0])\n",
    "den2 = np.array([1,a/Q,(2*(Q**2)+b)/(Q**2),a/Q,1])\n",
    "\n",
    "# Multiply polynomials using np.polymul()\n",
    "num = np.polymul(num1, num2)\n",
    "den = np.polymul(den1, den2)\n",
    "\n",
    "sos_cheb = tf2sos_analog(num, den)\n",
    "display(\"## Circuito Pasabandas\")\n",
    "display(Math(\"T_{bp}(s) = \" + pretty_print_SOS(sos_cheb, mode='omegayq', displaystr=False)))\n",
    "display(Math(\"T_{bp}(s) = \" + pretty_print_lti(num, den, displaystr=False)))\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "### Simulaciones\n",
    "\n",
    "## Circuito RLC PasaBanda\n",
    "\n",
    "<img src=\"image47.png\">\n",
    "\n",
    "<img src=\"image48.png\">\n",
    "\n",
    "<img src=\"image49.png\">\n",
    "\n",
    "<img src=\"image50.png\">\n",
    "\n",
    "## Circuito Pasabanda con Activos\n",
    "\n",
    "<img src=\"image51.png\">\n",
    "\n",
    "<img src=\"image52.png\">\n",
    "\n",
    "<img src=\"image53.png\">\n",
    "\n",
    "<img src=\"image54.png\">"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
